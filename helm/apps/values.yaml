global:
  replicaCount: 1
  acr:
    name: vantageacreastus2.azurecr.io
    repository: nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  env: "dev"

  # If you do want to specify Environment Values, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'env:'.
  # env:
  #   - name: env1
  #     value: somevalue
  #   - name: env2
  #     value: somevalue
  environmentVariable:
  - name: env1
    value: value1
  - name: env2
    value: value2

  # If you do want to specify Environment From (Secret or ConfigMap), uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'envFrom:'.
  # envFrom:
  # - type: secretRef | configmapRef
  #   name: 
  #
  environmentVariableFrom:
  - type: secretRef

  image:
    repository: nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets:
  - name: aks-secret
  nameOverride: "app1"
  fullnameOverride: ""

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  nodeSelector:
    app: bwapi

  tolerations:
  - key: "app"
    operator: "Equal"
    value: "bwapi"
    effect: "NoSchedule"

  affinity: {}

# For HPA
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# For Service
service:
  enabled: false
  type: ClusterIP
  port: 80
  targetPort: 80
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway

# For Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local


# For CronJob
job:
  enabled: false
  activeDeadlineSeconds: 300
  backoffLimit: 0
  ttlSecondsAfterFinished: 600
  completionMode: 0
  completions: 0
  manualSelector: 0
  parallelism: 0
  restartPolicy: Never
  acr: {}
  # If you do want to specify Environment Values, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'env:'.
  # env:
  #   - name: env1
  #     value: somevalue
  #   - name: env2
  #     value: somevalue
  environmentVariable: {}

  # If you do want to specify Environment From (Secret or ConfigMap), uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'envFrom:'.
  # envFrom:
  # - type: secretRef | configmapRef
  #   name: 
  #
  environmentVariableFrom: {}

# For ScaledJob
scaledJob:
  enabled: false
  activeDeadlineSeconds: 600
  backOffLimit:
  restartPolicy:
  imagePullPolicy:
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  maxReplicaCount: 30
  minReplicaCount: 0
  completions: 1
  parallelism: 1
  strategy: gradual
  pollingInterval: 5
  volumes: []
  volumeMounts: []
  triggers:
    type: azure-pipelines
    metadata:
      poolName: "self-hosted-agents-k8s"
      organizationURLFromEnv: "AZP_URL"
      personalAccessTokenFromEnv: "AZP_TOKEN"
  acr: {}
  # If you do want to specify Environment Values, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'env:'.
  # env:
  #   - name: env1
  #     value: somevalue
  #   - name: env2
  #     value: somevalue
  environmentVariable: {}

  # If you do want to specify Environment From (Secret or ConfigMap), uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'envFrom:'.
  # envFrom:
  # - type: secretRef | configmapRef
  #   name: 
  #
  environmentVariableFrom: {}

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  resources: {}

  nodeSelector: {}

  tolerations: {}

  affinity: {}

# For Secrets
secret:
  enabled: false
  type: Opaque
  data:
    .dockerconfigjson: |-
      {
        "auths": {
                "vantageacreastus2.azurecr.io": {
                        "auth": "dmFudGFnZWFjcmVhc3R1czI6L0MrZC9JT1NNVlhiOU5BZGhzTmdQenhpbEhDMmRoU2M="
                }
        }
      }
  stringData:
    AZP_URL: https://dev.azure.com/pinnacletechnology
    AZP_TOKEN: 427er7yhxatxly7rf7fraaxwvgw3yj472fvrapd2dzg5gdo7j6fq
    AZP_POOL: self-hosted-agents-k8s
    appsettings.Dummy.json: |-
      {
        "Dummy": {
          "Placeholder": {
            "Password": "blank"
          }
        }
      }

# For ConfigMaps
configMap:
  enabled: false
  data:
    name: manoj
    docker.json: |-
      {
        "auths": {
                "vantageacreastus2.azurecr.io": {
                        "auth": "dmFudGFnZWFjcmVhc3R1czI6L0MrZC9JT1NNVlhiOU5BZGhzTmdQenhpbEhDMmRoU2M="
                }
        }
      }

deployment:
  enabled: true
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  ports:
  - name: http
    containerPort: 80
    protocol: TCP
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  tty: true
  ConfigmapMounts:
  - name: certs-configmap
    mountPath: /etc/grafana/ssl/
    subPath: certificates.crt # (optional)
    configMap: certs-configmap
    readOnly: true
  csiProviderMounts: {}
  secretMounts: {}
  VolumeMounts: []



pod:
  enabled: false
