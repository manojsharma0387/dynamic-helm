{{- if .Values.deployment.enabled -}}
{{- $name := include "apps.name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-{{ include "apps.name" . }}
  {{- include "apps.namespace" . | nindent 2 }} 
  labels:
    {{- include "apps.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.global.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "apps.selectorLabels" . | nindent 6 }}
  {{- with .Values.deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "apps.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "apps.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.deployment.automountServiceAccountToken | default false }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds | default 100 }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "apps.name" . }}
          securityContext:
            {{- toYaml .Values.deployment.securityContext | nindent 12 }}
          image: {{ .Values.global.acr.name }}/{{ include "apps.name" . }}:{{ .Values.global.acr.tag }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          {{- if .Values.deployment.environmentVariable | default .Values.global.environmentVariable }}
          env:
          {{- range .Values.deployment.environmentVariable | default .Values.global.environmentVariable }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
            {{- if .Values.deployment.secrets }}
            {{- range $secretName, $secretKey := .Values.deployment.secrets.secretObjects }}
            - name: {{ $secretName }}
              valueFrom:
                secretKeyRef:
                  key: {{ $secretKey }}
                  name: {{ .Values.deployment.secret.name }}
            {{- end }}
            {{- end }}
            {{- if .Values.deployment.fields }}
            {{- range $fieldName, $fieldPath := .Values.deployment.fields.fieldObjects }}
            - name: {{ $fieldName }}
              valueFrom:
                fieldRef:
                  fieldPath: {{ $fieldPath }}
            {{- end }}
            {{- end }}            
          {{- end }}           
          {{- range .Values.deployment.environmentVariableFrom | default .Values.global.environmentVariableFrom }}
          envFrom:
          - {{ .type }}:
              {{- if eq .type "secretRef" }}
              name: secret-{{ $name }}
              {{- end }}
              {{- if eq .type "configmapRef" }}
              name: configmap-{{ $name }}
              {{- end }}
          {{- end }}
          {{- with .Values.deployment.ports }}          
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.deployment.livenessProbe }}    
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}   
          {{- with .Values.deployment.readinessProbe }}    
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.deployment.resources | default .Values.global.resources }}   
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          tty: {{ .Values.deployment.tty }}
          volumeMounts:
          {{- range .Values.deployment.configmapMounts }}
          - name: {{ .name | default "configmap-{{  $name }}" }}
            mountPath: {{ .mountPath }}
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end}}
            readOnly: {{ .readOnly }}
          {{- end }} 
          {{- range .Values.deployment.secretMounts }}
          - name: {{ .name | default "secret-{{  $name }}" }}
            mountPath: {{ .mountPath }}
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end}}
            readOnly: {{ .readOnly }}
          {{- end }} 
          {{- range .Values.deployment.csiProviderMounts }}
          - name: {{ .name | default "csi-{{  $name }}" }}
            mountPath: {{ .mountPath }}
            readOnly: {{ .readOnly }}
          {{- end }}                                      
      volumes:
      {{- range .Values.deployment.configmapMounts }}
      - name: {{ .name | default "configmap-{{ $name }}" }}
        configMap:
          name: {{ .configMap | default "configmap-{{ $name }}" }}      
      {{- end }} 
      {{- range .Values.deployment.secretMounts }}
      - name: {{ .name | default "secret-{{ $name }}" }}
        secret:
          secretName: {{ .secret | default "secret-{{ $name }}" }}      
      {{- end }}
      {{- range .Values.deployment.csiProviderMounts }}
      - name: {{ .name | default "csi-{{ $name }}" }}
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: {{ .readOnly }}
          volumeAttributes:
            secretProviderClass: {{ .secretProviderClass }}
      {{- end }}               
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
